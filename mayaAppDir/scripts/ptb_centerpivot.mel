/* ptb_centerpivot.mel

This script may be freely distributed. Modify at your own risk.

Author:		Dirk Bialluch (DirkBi@Software2000.de)

Creation Date:	22.05.98
Last Update:	24.05.99
*/

//
// Main procedure
//

global proc ptb_centerpivot ()
{
	string $objList[] = `ptb_filterTransforms`;
	int $count = `size ($objList)`;
	$count -= 1;

	int $bbMode = `optionMenu -q -select ptb2_bb`;

	if (`radioButtonGrp -q -select ptb2_mode` == 1)
	{
		// center individual
		for ($count; $count >= 0; $count--)
		{
			float $old[3] = `xform -q -ws -pivots $objList[$count]`;
			float $new[6] = `xform -q -ws -boundingBox $objList[$count]`;
			if (`checkBox -q -value ptb2_xbox`)
				if ($bbMode == 2)
					$old[0] = $new[0];
				else if ($bbMode == 3)
					$old[0] = $new[3];
				else
					$old[0] = ($new[0] + $new[3]) / 2;
			if (`checkBox -q -value ptb2_ybox`)
				if ($bbMode == 4)
					$old[1] = $new[1];
				else if ($bbMode == 5)
					$old[1] = $new[4];
				else
					$old[1] = ($new[1] + $new[4]) / 2;
			if (`checkBox -q -value ptb2_zbox`)
				if ($bbMode == 6)
					$old[2] = $new[2];
				else if ($bbMode == 7)
					$old[2] = $new[5];
				else
					$old[2] = ($new[2] + $new[5]) / 2;

			if (`checkBox -q -value ptb2_spBox`)
				xform -ws -sp $old[0] $old[1] $old[2] $objList[$count];
			if (`checkBox -q -value ptb2_rpBox`)
				xform -ws -rp $old[0] $old[1] $old[2] $objList[$count];
		}
	}
	else
	{
		// center common
		int $count2 = $count;
		float $boundary[6] = `xform -q -os -boundingBox $objList[$count2]`;

		for ($count2; $count2 >= 0; $count2--)
		{
			float $new[6] = `xform -q -os -boundingBox $objList[$count2]`;

			$boundary[0] = `min $boundary[0] $new[0]`;
			$boundary[1] = `min $boundary[1] $new[1]`;
			$boundary[2] = `min $boundary[2] $new[2]`;
			$boundary[3] = `max $boundary[3] $new[3]`;
			$boundary[4] = `max $boundary[4] $new[4]`;
			$boundary[5] = `max $boundary[5] $new[5]`;
		}

		for ($count; $count >= 0; $count--)
		{
			float $old[3] = `xform -q -ws -pivots $objList[$count]`;
			if (`checkBox -q -value ptb2_xbox`)
				if ($bbMode == 2)
					$old[0] = $boundary[0];
				else if ($bbMode == 3)
					$old[0] = $boundary[3];
				else
					$old[0] = ($boundary[0] + $boundary[3]) / 2;
			if (`checkBox -q -value ptb2_ybox`)
				if ($bbMode == 4)
					$old[1] = $boundary[1];
				else if ($bbMode == 5)
					$old[1] = $boundary[4];
				else
					$old[1] = ($boundary[1] + $boundary[4]) / 2;
			if (`checkBox -q -value ptb2_zbox`)
				if ($bbMode == 6)
					$old[2] = $boundary[2];
				else if ($bbMode == 7)
					$old[2] = $boundary[5];
				else
					$old[2] = ($boundary[2] + $boundary[5]) / 2;

			if (`checkBox -q -value ptb2_spBox`)
				xform -ws -sp $old[0] $old[1] $old[2] $objList[$count];
			if (`checkBox -q -value ptb2_rpBox`)
				xform -ws -rp $old[0] $old[1] $old[2] $objList[$count];
		}
	}
}

// end of script

