// safeSeparate.mel  v1.0  (21 Oct 1999)
//
// MEL script for Maya
//
// by Bryan Ewert
//    http://www.ewertb.com/
//    bryan@ewertb.com
//
//    H2O Entertainment Corporation
//    Vancouver, Canada
//    http://www.h2oent.com

// Preamble:
//   Polygon ColorPerVertex is not preserved properly when performing
//   Edit Polygons -> Extract and Edit Polygons -> Separate commands.
//   This makes it difficult to split objects that already have
//   Color Per Vertex applied.
//
// Function:
//   This script performs a long-hand approach to splitting an object
//   apart:  Dupe the object, delete the selected facets from the
//   original and delete the opposite of the selected facets from
//   the duplicate.  This method preserves the Color Per Vertex
//   information.
//
// Usage
//   Select any number of face components.  Faces may be selected
//   on more than one object; in this case, a separation will be performed
//   on all affected objects.  Faces do not need to be selected in
//   a contiguous block.  If you select all faces for an object then
//   no action is taken for that object.
//
//   Lastly, call this script.  Each affected object will be separated
//   into two objects.  The newly created object will contain only the
//   selected faces; the original object will contain all except the
//   selected faces.  The newly created object will be the same as the
//   original with the addition of a numeric decoration.

proc int[] componentRange( string $select )
// componentRange() parses the selection stats for a component item
// and returns the start and end for the selection range.
// Example:  If vertices 3 through 5 of a model are selected, Maya
// lists this as 'polyModel.vtx[3:5]'; in this case, componentRange()
// will return the array { 3, 5 }.  If only a single vertex is selected,
// Maya lists this as, e.g., 'polyMode.vtx[12]'; in this case,
// componentRange() will return the array { 12, 12 }.
{
    string $buffer[];
    int $i, $tokens;
    int $elements[2] = { 0, 0 };

    $tokens = `tokenize $select "[:]" $buffer`;

    $elements[0] = $elements[1] = int($buffer[1]);

    if ( $tokens > 2 )
        $elements[1] = int($buffer[2]);

    return $elements;
}

proc string rootNode( string $object )
{
    string $buffer[];
    tokenize $object "." $buffer;
    return $buffer[0];
}

global proc safeSeparate()
{
    string $select[] = `filterExpand -sm 34 -ex false`;

    if ( 0 == size( $select ) )
        error ( "Please select one or more face components." );

    string $currentObject = rootNode( $select[0] );
    string $faces[];
    int $numFaces = 0;

    string $origMesh, $newMesh, $dupeMesh;

    for ( $i = 0; $i < size( $select ); $i++ )
    {
        $faces[$numFaces++] = $select[$i];

        if ( rootNode( $select[$i+1] ) != $currentObject )
        // Last face for this object.. perform separate
        {
            string $node = rootNode( $faces[0] );

            int $intArray[] = `polyEvaluate -f $node`;
            int $evalFaces = $intArray[0];

            int $componentRange[] = componentRange( $select[$i] );
            if ( $componentRange[0] != 0 || $componentRange[1] != ( $evalFaces - 1 ) )
            {
                string $dupe[] = `duplicate $node`;
                $dupeMesh = $dupe[0];

                // Delete selected faces from original object, and
                // delete unselected faces from duplicate
                select -r $faces;
                delete;
                $origMesh = `rename $node ( $dupeMesh + "#" )`;
                $newMesh = `rename $dupeMesh $node`;
                select -r $faces;
                select -tgl ( $node + ".f[0:" + $evalFaces + "]" );
                delete;

                // Restore names
                $newMesh = `rename $newMesh $dupeMesh`;

                $origMesh = `rename $origMesh $node`;

                rename $newMesh ( $origMesh + "#" );
            }
            else
            // User has selected all faces of object.. nothing to separate
            {
                warning( "Skipping " + $node );
            }

            clear $faces;
            $numFaces = 0;
        }
    }

}
